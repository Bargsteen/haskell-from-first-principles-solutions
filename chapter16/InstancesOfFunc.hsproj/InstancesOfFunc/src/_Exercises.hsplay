-- Haskell Playground 1.0
fmap (+1) (L 1 2 3)

fmap (+1) (R 1 2 3)

a = K 2

:t a

fmap (+1) a


-- 3. K flip
fk :: K Int Char; fk = K 3

fmap (+1) (Flip fk)


myList = Cons 1 (Cons 2 (Cons 3 (Cons 4 (Cons 5 ( Nil )))))

fmap (*2) myList

goats = MoreGoats (OneGoat 2) (NoGoat) (MoreGoats (OneGoat 1) (OneGoat 3) (OneGoat 5))

fmap (+10) goats

y = fmap (+2) (+1)

y 5 


ttm = Read (\x -> if 'a' `elem` x then 1 else 0) 

ttm' = fmap (+1) ttm
